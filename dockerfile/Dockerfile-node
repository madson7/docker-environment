ARG IMAGE_VERSION=${IMAGE_VERSION}
ARG IMAGE_TYPE=${IMAGE_TYPE}

FROM node:${IMAGE_VERSION}-${IMAGE_TYPE} as runner

# Definir diretório de trabalho
WORKDIR /app

# Atualizar pacotes e instalar dependências do sistema, baseada em Debian/Ubuntu, Alpine ou Red Hat/CentOS/Fedora
RUN if [ "$(cat /etc/os-release | grep -o 'Debian\|Ubuntu' | head -n1)" != 'Debian\|Ubuntu' ]; \
    then echo 'nothing to do' ; \
    else apt-get update && \
    apt-get upgrade -y ; \
    fi
RUN if [ "$(cat /etc/os-release | grep -o 'Alpine' | head -n1)" != "Alpine" ]; \
    then echo 'nothing to do' ; \
    else apk update && \
    apk upgrade -U -a ; \
    fi
RUN if [ "$(cat /etc/os-release | grep -o 'Red Hat\|CentOS\|Fedora' | head -n1)" != 'Red Hat\|CentOS\|Fedora' ]; \
    then echo 'nothing to do' ; \
    else yum update -y ; \
    fi

# Copiar arquivos de código fonte
COPY . /app

# Instalar dependências node especificadas no package.json
RUN npm install
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
